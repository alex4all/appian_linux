####################################  LOGGERS
## configure LOG LEVELS AND CHOOSE APPENDERS (Note: Consecutive "configure" 
## statements are independent and do not overwrite each other.)

# To enable logging per gateway, create a logging properties
# with the file name format "log_XX_YY.properties" where XX
# is the process type:
#   gw (Gateway),
#   db (Database)
# and YY is the application identifier: 
#   DF (Forums),
#   NO (Notifications),
#   NE (Notifications Email),
#   CH (Channels),
#   CO (Content),
#   CS (Content Statistics),
#   PE (Personalization),
#   PO (Portal),
#   PA (Process Analytics),
#   PD (Process Design),
#   PX (Process Execution)

## Root Logger
configure=WARN, SERVER
configure=INFO, ROLLBACK

## Gateways
configure.a.gw=INFO, GATEWAY

## External scripts
configure.script=INFO, SCRIPT CONSOLE

## SDL messages
configure.sdl=FATAL, SERVER_INIT

## DML messages
configure.dml=ERROR, DML_VALIDATION

## TRANSACTION messages
## configure.dml.v.trans=ERROR, DML_TRANSACTION_VALIDATION

########## PERFORMANCE TRACKING ##########
configure.a.pf=WARN, PERFORMANCE
configure.a.pf.te=WARN, PERFORMANCE
configure.a.pf.tg=WARN, PERFORMANCE

## QUEUES TRACKING (EXECUTION and DESIGN)
configure.a.pf.queues=WARN, PERFORMANCE

## EXEC SPECIFIC TRACKING
configure.a.pf.exec=WARN, PERFORMANCE
configure.a.pf.exec.load=WARN, PERFORMANCE

## Appian Object Service (set to DEBUG to view error trace)
configure.ao=INFO, SERVER

## Boot Info
configure.boot=INFO, SERVER

############### EVENTS ###############
## General events (EXECUTION and DESIGN)
configure.events=WARN, SERVER
configure.events=INFO, ROLLBACK

## Event messages (EXECUTION and DESIGN)
configure.events.msg=WARN, SERVER
configure.events.msg=INFO, ROLLBACK

## Event timers (EXECUTION and DESIGN)
configure.events.timer=WARN, SERVER
configure.events.timer=WARN, ROLLBACK

## Event rules (EXECUTION and DESIGN)
configure.events.rules=WARN, SERVER
configure.events.rules=INFO, ROLLBACK

## Process
# Enabling warnings for heavy load 
configure.a.p.PROCESS.i=WARN, SERVER
configure.a.p.PROCESS.i=INFO, ROLLBACK

## Topology
configure.a.p.TPLGY=ERROR, SERVER

## Security
configure.a.p.SECURITY=INFO, SERVER

## NODE WITHOUT THE NOTIFICATIONS APPENDER (ONLY EXECUTION)
configure.a.noa=WARN, SERVER

## Expressions (must be set to DEBUG for information)
#
# When enabled to DEBUG, this will give information about those
# expressions that fail, including the content of the variables that
# they reference and any exceptions generated.
configure.a.p.EVALEX.i=WARN, SERVER
configure.a.p.EVALEX.i=INFO, ROLLBACK

## Tuning (the background timer)
#
# Enabling this at info or debug levels will give additional information
# about the background timer, when it is retuned, its duration, the
# functions executed, etc.
configure.a.p.PROCESS.i.tuning=WARN, SERVER
configure.a.p.PROCESS.i.tuning=WARN, ROLLBACK

########## LIBRARIES ##########
## File loading
configure.a.s.loader=INFO, SERVER
## Server Migration
configure.migrate=INFO, SERVER
## Server Properties
configure.a.p.prop=INFO, SERVER
## UUID Hash Properties
configure.u=INFO, SERVER
## Rules
configure.rule=ERROR, SERVER
## SDL Validation
configure.sdl.vallog=FATAL, SERVER
## Topics
configure.topic=ERROR, SERVER
## Types
configure.type=ERROR, SERVER
## UTF8
configure.a.p.UTF8=ERROR, SERVER
## Debug
configure.debug=ERROR, ASSERT
## Import Export
configure.ix=INFO, SERVER
## Monitor
configure.perf=INFO, MONITOR

## Message Broadcaster
configure.messageBroadcaster=ERROR, SERVER

####################################  APPENDERS

## CONSOLE APPENDER
# Writes log statements to stdout (which can be redirected to a text file).
CONSOLE=.a.l.appenders.text.stdout
CONSOLE.pattern=%yyyy-%mo-%dd %hh:%mm:%ss %msg

## GATEWAY APPENDER
# Writes log statements to a plain text file
GATEWAY=.a.l.appenders.text.textfile
GATEWAY.pattern=%yyyy-%mo-%dd %hh:%mm:%ss [%app] %lvl %node "%msg"
GATEWAY.file=$(AE_SVRLOG)/$(AE_LOGNM)
GATEWAY.append=1

## SERVER APPENDER
# Writes log statements to a plain text file
SERVER=.a.l.appenders.text.textfile
SERVER.pattern=%yyyy-%mo-%dd %hh:%mm:%ss [%app] {%kdb %ptid} (%tsp) %lvl %node "%msg"
SERVER.file=$(AE_SVRLOG)/$(AE_LOGNM)
SERVER.append=1

## SCRIPT APPENDER
# Used by external scripts
SCRIPT=.a.l.appenders.text.textfile
SCRIPT.pattern=%yyyy-%mo-%dd %hh:%mm:%ss [%app] %lvl "%msg"
SCRIPT.file=$(AE_SVRLOG)/$(AE_LOGNM)
SCRIPT.append=1

## ASSERT APPENDER
# Writes to a binary file when debugging is enabled
# Use synch=0. With synch=1 log statement does not complete until updated file written to disk - much too slow.
ASSERT=.a.l.appenders.data.binfile
ASSERT.file=$(AE_SVRLOG)/asserts.l
ASSERT.synch=0

## SERVER_INIT APPENDER
# Writes log statements to a plain text file upon server initialization
# Use append=1.
SERVER_INIT=.a.l.appenders.text.textfile
SERVER_INIT.pattern=%yyyy-%mo-%dd %hh:%mm:%ss [%app] {%kdb %ptid} (%tsp) %lvl %node "%msg"
SERVER_INIT.file=$(AE_SVRLOG)/init_$(AE_TYPE)$(AE_APP).log
SERVER_INIT.append=1

## IN MEMORY LOGS
# only writes to disk when each transaction finishes
# Rollback Log
ROLLBACK=.a.l.appenders.inmemory.rollback

## Performance Log
# If double quotes are changed from the message pattern, performance logging won't work correctly; it
# quote wraps optional values.
PERFORMANCE=.a.l.appenders.inmemory.performance
PERFORMANCE.pattern=%yyyy-%mo-%dd %hh:%mm:%ss [%app] {%kdb %ptid} (%tsp) %lvl %node "%msg"
PERFORMANCE.file=$(AE_SVRLOG)/$(AE_LOGNM)

## DML_VALIDATION APPENDER
# Writes log statements to a plain text file
DML_VALIDATION=.a.l.appenders.text.textfile
DML_VALIDATION.pattern=%yyyy-%mo-%dd %hh:%mm:%ss [%app] {%kdb %ptid} (%tsp) %lvl %node "%msg"
DML_VALIDATION.file=$(AE_SVRLOG)/dml_$(AE_LOGNM)
DML_VALIDATION.append=1

## DML_TRANSACTION_VALIDATION APPENDER
# Writes log statements to a plain text file
DML_TRANSACTION_VALIDATION=.a.l.appenders.text.textfile
DML_TRANSACTION_VALIDATION.pattern=%yyyy-%mo-%dd %hh:%mm:%ss [%app] {%kdb %ptid} (%tsp) %lvl %node "%msg"
DML_TRANSACTION_VALIDATION.file=$(AE_SVRLOG)/dml_trans_$(AE_LOGNM)
DML_TRANSACTION_VALIDATION.append=1

## MONITOR APPENDER
# Writes log statements to a plain text file
MONITOR=.a.l.appenders.text.textfile
MONITOR.pattern=%yyyy-%mo-%dd %hh:%mm:%ss,[%app],"{%kdb %ptid}",%msg
MONITOR.file=$(AE_SVRLOG)/perflogs/perf_monitor_$(AE_LOGNM_BARE).csv
MONITOR.append=1
MONITOR.header=monitor
