<project name="File deletion and backup" default="default" basedir="."> 

 <!-- antcontrib tasks -->
  <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
                <pathelement location="../lib/ant-contrib-1.0b1.jar"/>
        </classpath>
  </taskdef>
  <!-- appian custom task to get sorted and filtered kdb list -->
<taskdef name="sortedfilelist" classname="com.appiancorp.cm.datamaintenance.SortedFileList">
        <classpath>
                <pathelement location="../lib/appian-anttasks.jar"/>
        </classpath>
</taskdef>
  <!-- appian custom task to get server subdirectory - useful to delete kdbs in corresponding directory path in target -->
<taskdef name="aeserversubdir" classname="com.appiancorp.cm.datamaintenance.AEServerSubDir">
        <classpath>
                <pathelement location="../lib/appian-anttasks.jar"/>
        </classpath>
</taskdef>


 <property environment="env"/>
  <!-- Java Home will be used for running Java interpreter with jspc class, and for compiling translated jsps -->
  <property name="ant.home"	     location="${env.ANT_HOME}"/>
  <!-- AE installation location -->
  <property name="ae.serverdir"     value="server" />
  <property name="ae.admindir"     value="_admin" />
  <property name="ae.source.location"  value="" />
  <property name="ae.dest.location"  value="" />
  <property name="ae.datadelete"  value="y" />
  <property name="archive.status"  value="n" />
  <property name="kdb.high"  value="n" />
  <property name="kdb.num"  value="-1" />
  <property name="kdb.invertselect"  value="n" />
  <property name="batchmode"    value="n" />

<target name="default" description="Determine if the script should run in batch or interactive mode">
<if>
<equals arg1="n" arg2="${batchmode}"/>
<then>
	<antcall target="interactive" inheritall="true"/>
</then>
<else>
	<antcall target="batch" inheritall="true"/>
</else>
</if>

</target>

<target name="interactive" description="Ask user what tasks thay want to do">
<echo message="This script deletes AE5 kdbs and also offers option to make backup of kdbs before deleting them"/>	
	<echo message=""/>	
<input message="Please enter the root location of source AE installation (for example, c:/ae50)"
       addproperty="ae.source.location.input"
 />

<propertycopy name="ae.source.location" from="ae.source.location.input" override="yes" />
<echo message="Source AE installation location is ${ae.source.location}"/>
<echo message=""/>	
<input message="Would you like to clean old, unused data from Appian Enterprise? If you answer yes, additional information will be asked for before cleanup operation. Archiving option will also be offered next"
       validargs="y,n"
       addproperty="ae.datadelete.input"
       defaultvalue="y"
 />
<propertycopy name="ae.datadelete" from="ae.datadelete.input" override="yes"  />

<if>
    <equals arg1="y" arg2="${ae.datadelete}"/>
    <then>
	<echo message=""/>
	<input message="Archive the data (all engine data repositories will be archived) before deletion? "
	 addproperty="archive.status.input"
	 validargs="y,n"
	 defaultvalue="y"
	/>
	<propertycopy name="archive.status" from="archive.status.input"  override="yes"  />

	<if>
	 <equals arg1="y" arg2="${archive.status}"/>
	 <then>
	<echo message=""/>
	<input message="Please enter the root location of destination directory where the archived data will be stored (for example, c:/ae50). Please make sure that destination directory exists"
       	addproperty="ae.dest.location.input"
	/>
	<propertycopy name="ae.dest.location" from="ae.dest.location.input" override="yes" />

	</then>
	</if>

	<echo message=""/>	
	<echo message="Archived file will be tarred and appended with timestamp to 'aearchive', for example, aearchive_20060606_102030.tar"/>	
	<echo message=""/>	

	<input message="Do you want to delete lowest numbered engine data repositories? Answering no will select highest numbered engine data repositories" 
	addproperty="kdb.high.input"
	validargs="y,n"
	defaultvalue="n" />

	<propertycopy name="kdb.high" from="kdb.high.input" override="yes" />
	<echo message=""/>
	<input message="How many engine data repositories do you want to delete? -1 will select all."
	 addproperty="kdb.num.input"
	 defaultvalue="-1" />

	<propertycopy name="kdb.num" from="kdb.num.input" override="yes" />
	<echo message=""/>
	<input message="You can do inverse selection of all but the engine data repositories specified before (useful to select for example, all but top 5 data repositories). If you answer yes, inverse selection will be done instead "
	addproperty="kdb.invertselect.input"
	validargs="y,n"
	defaultvalue="n" />

	<propertycopy name="kdb.invertselect" from="kdb.invertselect.input" override="yes" />

	<if>
    		<equals arg1="n" arg2="${kdb.high}"/>
    	<then>
		<property name="kdb.descending" value="true"/>
	</then>

	<else>
		<property name="kdb.descending" value="false"/>
	</else>
	</if>


	<if>
    		<equals arg1="y" arg2="${kdb.invertselect}"/>
    	<then>
		<property name="kdb.rest" value="true"/>
	</then>

	<else>
		<property name="kdb.rest" value="false"/>
	</else>
	</if>
	


	<!-- Make backup of target AE installation files first -->
	<!-- Get timestamp - it will be used to generate archive file name - DST issue? -->


	<if>
	 <equals arg1="y" arg2="${archive.status}"/>
	 <then>
	<tstamp>
		<format property="archiveTstamp" pattern="yyyyMMddhhmmss" />
	</tstamp>
       
	<antcall target="archive" inheritAll="true">
	    <param name="archive.source.location" value="${ae.source.location}"/>
	    <param name="archive.serverdir" value="${ae.serverdir}"/>
	    <param name="archive.dest.dir" value="${ae.dest.location}"/>
	    <param name="archive.file.name" value="aearchive_${archiveTstamp}.tar"/>
	</antcall>
	</then>
	</if>

	<!-- Delete kdbs from target AE installation after above backup to ensure that copied kdbs are loaded -->

	<!-- delete kdbs and other data files to target AE installation -->
	<antcall target="deletedata" inheritAll="true"/>

    </then>
</if>
</target>


<target name="batch" description="Execute tasks specified in batch mode">


<echo message="Source AE installation location is ${ae.source.location}"/>

<if>
    <equals arg1="y" arg2="${ae.datadelete}"/>
    <then>

	<if>
	 <equals arg1="y" arg2="${archive.status}"/>
	 <then>

	</then>
	</if>

	<echo message=""/>	
	<echo message="If archiving option is selected, archived file will be tarred and appended with timestamp to 'aearchive', for example, aearchive_20060606_102030.tar"/>	
	<echo message=""/>	

	<if>
    		<equals arg1="n" arg2="${kdb.high}"/>
    	<then>
		<property name="kdb.descending" value="true"/>
	</then>

	<else>
		<property name="kdb.descending" value="false"/>
	</else>
	</if>


	<if>
    		<equals arg1="y" arg2="${kdb.invertselect}"/>
    	<then>
		<property name="kdb.rest" value="true"/>
	</then>

	<else>
		<property name="kdb.rest" value="false"/>
	</else>
	</if>
	


	<!-- Make backup of target AE installation files first -->
	<!-- Get timestamp - it will be used to generate archive file name - DST issue? -->


	<if>
	 <equals arg1="y" arg2="${archive.status}"/>
	 <then>
	<tstamp>
		<format property="archiveTstamp" pattern="yyyyMMddhhmmss" />
	</tstamp>
       
	<antcall target="archive" inheritAll="true">
	    <param name="archive.source.location" value="${ae.dest.location}"/>
	    <param name="archive.serverdir" value="${ae.serverdir}"/>
	    <param name="archive.dest.dir" value="${ae.dest.location}"/>
	    <param name="archive.file.name" value="aearchive_${archiveTstamp}.tar"/>
	</antcall>
	</then>
	</if>

	<!-- Delete kdbs from target AE installation after above backup to ensure that copied kdbs are loaded -->

	<!-- delete kdbs and other data files to target AE installation -->
	<antcall target="deletedata" inheritAll="true"/>

    </then>
</if>
</target>


<target name="archive" description="Copy AE data after tarring it up">

<echo message="${archive.dest.dir}"/>
<echo message="${archive.file.name}"/>
<echo message="${archive.dest.dir}${file.separator}${archive.file.name}"/>
<tar destfile="${archive.dest.dir}${file.separator}${archive.file.name}">
	<tarfileset dir="${archive.source.location}${file.separator}${archive.serverdir}" prefix="${archive.serverdir}" includes="**/gw*/*.kdb"/>
</tar>

</target>

<target name="deletedata" description="Delete kdbs from specified installation">

<!-- a special property that is passed to "deletekdbs" target when kdb list is needed for kdbs with specific prefix, for example, dc*kdb or stat*kdb in collaboration -->
<property name="kdbprefix" value="" />

<!-- delete the kdbs. Exclude collaboration, notification and metadata which have two set of kdbs with different prefixes -->

<foreach param="kdb.dir" target="deletekdbs" trim="true" inheritall="true">
<path>
<dirset dir="${ae.source.location}${file.separator}${ae.serverdir}" includes="**/gw*" excludes="collaboration/*, notifications/*, metadata/*"/>
</path>
</foreach>

<!-- delete the collaboration dc and stat kdbs -->
<!-- delete dc*kdb -->

<property name="dcprefix" value="dc"/>
<propertycopy name="kdbprefix" from="dcprefix" override="yes"/>

<foreach param="kdb.dir" target="deletekdbs" trim="true" inheritall="true">
<path>
<dirset dir="${ae.source.location}${file.separator}${ae.serverdir}" includes="collaboration/gw*"/>
</path>
</foreach>

<!-- delete stat*kdb -->
<property name="statprefix" value="stat"/>
<propertycopy name="kdbprefix" from="statprefix" override="yes"/>

<foreach param="kdb.dir" target="deletekdbs" trim="true" inheritall="true">
<path>
<dirset dir="${ae.source.location}${file.separator}${ae.serverdir}" includes="collaboration/gw*"/>
</path>
</foreach>

<!-- delete notifications n*kdb and s*kdb -->

<!-- delete n*kdb -->
<property name="nprefix" value="n"/>
<propertycopy name="kdbprefix" from="nprefix" override="yes"/>

<foreach param="kdb.dir" target="deletekdbs" trim="true" inheritall="true">
<path>
<dirset dir="${ae.source.location}${file.separator}${ae.serverdir}" includes="notifications/gw*"/>
</path>
</foreach>

<!-- delete s*kdb -->
<property name="sprefix" value="s"/>
<propertycopy name="kdbprefix" from="sprefix" override="yes"/>

<foreach param="kdb.dir" target="deletekdbs" trim="true" inheritall="true">
<path>
<dirset dir="${ae.source.location}${file.separator}${ae.serverdir}" includes="notifications/gw*"/>
</path>
</foreach>

<!-- delete metadata dt*kdb -->

<!-- delete dt*kdb -->
<property name="dtprefix" value="dt"/>
<propertycopy name="kdbprefix" from="dtprefix" override="yes"/>

<foreach param="kdb.dir" target="deletekdbs" trim="true" inheritall="true">
<path>
<dirset dir="${ae.source.location}${file.separator}${ae.serverdir}" includes="metadata/gw*"/>
</path>
</foreach>



</target>


<target name="deletekdbs" description="Get the specified number of kdbs">
<echo message="KDB Directory ${kdb.dir}"/>

<!-- first delete writing*.kdb if any -->

<echo message="Deleting ${kdb.dir}${file.separator}writing*.kdb before deleting specified repositories" />

<delete failonerror="false">
<fileset dir="${kdb.dir}" includes="writing*.kdb"/>
</delete>


<if>
<!-- if no kdb prefix is set, get all kdbs -->
<equals arg1="" arg2="${kdbprefix}"/>
<then>
<path id="kdblist">
<fileset dir="${kdb.dir}" includes="*.kdb"/>
</path>
</then>
<else>
<path id="kdblist">
<fileset dir="${kdb.dir}" includes="${kdbprefix}*.kdb"/>
</path>
</else>
</if>

<property name="kdb.list" refid="kdblist"/>

<sortedfilelist name="sortedkdblist" filelist="${kdb.list}" descending="${kdb.descending}" rest="${kdb.rest}" numberOfFiles="${kdb.num}"/>

<!-- get server subdirectory for the source directory and delete in the same subdirectory relative to destination - good practice to maintain paths when deleteing kdbs -->
<aeserversubdir name="serversubdir" dirPath="${kdb.dir}"/>

<!-- cast output of sortedfilelist as a fileset - it can then be used by other tasks (see delete task below) that use fileset -->

<!-- make sure that sortedfilelist is not empty otherwise fileset would end up including everything -->

<if>
<equals arg1="" arg2="${sortedkdblist}"/>
<then>
<!-- do nothing as no selections were made -->
</then>
<else>
<delete verbose="true">
	<fileset dir="${ae.source.location}${file.separator}${ae.serverdir}${file.separator}${serversubdir}" includes="${sortedkdblist}"/>
</delete>
</else>
</if>
</target>

</project>
